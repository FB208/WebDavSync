name: Build and Release

on:
  push:
    tags:
      - 'v*'  # 当推送以 v 开头的 tag 时触发

jobs:
  build-debian:
    runs-on: ubuntu-latest
    container:
      image: debian:bullseye

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up environment
      run: |
        apt-get update
        apt-get install -y python3.9 python3.9-venv python3.9-dev python3-pip
        python3.9 -m pip install --upgrade pip
        
    - name: Install dependencies
      run: |
        python3.9 -m pip install -r requirements.txt
        python3.9 -m pip install pyinstaller
        
    - name: Build with PyInstaller
      run: python3.9 -m PyInstaller --onefile main.py -n webdavsync
      
    - name: Rename output file
      run: mv dist/webdavsync dist/webdavsync-${{ github.ref_name }}-debian
      
    - name: Upload Debian artifact
      uses: actions/upload-artifact@v4
      with:
        name: debian-build
        path: dist/webdavsync-*

  build-windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.9.2
      uses: actions/setup-python@v5
      with:
        python-version: '3.9.2'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Build with PyInstaller
      run: pyinstaller --onefile main.py -n webdavsync
      
    - name: Rename output file
      run: ren dist\webdavsync.exe webdavsync-${{ github.ref_name }}-windows.exe
      
    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: dist\webdavsync-*

  create-release:
    needs: [build-debian, build-windows]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取所有历史记录，以便我们可以获取最近的提交信息
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
      
      - name: Get commit message
        id: get_commit_message
        run: |
          echo "message=$(git log -1 --pretty=%B)" >> $GITHUB_OUTPUT
      
      - name: Create Release and Upload Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ github.ref_name }} \
            ./debian-build/webdavsync-${{ github.ref_name }}-debian \
            ./windows-build/webdavsync-${{ github.ref_name }}-windows.exe \
            --title "Release ${{ github.ref_name }}" \
            --notes "${{ steps.get_commit_message.outputs.message }}"
