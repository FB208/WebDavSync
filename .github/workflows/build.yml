name: Build and Release

on:
  push:
    tags:
      - 'v*'  # 当推送以 v 开头的 tag 时触发

jobs:
  build-debian:
    runs-on: ubuntu-latest
    container:
      image: debian:bullseye

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up environment
      run: |
        apt-get update
        apt-get install -y python3.9 python3.9-venv python3.9-dev python3-pip
        python3.9 -m pip install --upgrade pip
        
    - name: Install dependencies
      run: |
        python3.9 -m pip install -r requirements.txt
        python3.9 -m pip install pyinstaller
        
    - name: Build with PyInstaller
      run: python3.9 -m PyInstaller --onefile main.py
      
    - name: Upload Debian artifact
      uses: actions/upload-artifact@v3
      with:
        name: debian-build
        path: dist/*

  build-windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.9.2
      uses: actions/setup-python@v3
      with:
        python-version: '3.9.2'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Build with PyInstaller
      run: pyinstaller --onefile main.py
      
    - name: Upload Windows artifact
      uses: actions/upload-artifact@v3
      with:
        name: windows-build
        path: dist\*

  create-release:
    needs: [build-debian, build-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          
      - name: Upload Debian Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./debian-build/main
          asset_name: main-debian
          asset_content_type: application/octet-stream
          
      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows-build/main.exe
          asset_name: main-windows.exe
          asset_content_type: application/octet-stream
